#define SIZEOF(type)sizeof(type)
//	int main()
//	{
//		int ret = SIZEOF(int);
//		int ret = sizeof(int);
//		printf("%d\n", ret);
//		return 0;
//	}
//	return 0;
//}
////inline -内联函数 c++
//#define DEBUG
//int main()
//{
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,0 };
//	int i = 0;
//	for (i = 0; i < 10; i++)
//	{
//		arr[i] = 0;
//   #ifdef DEBUG
//	printf("%d", arr[i]);
//   #endif
//	}
//	return 0;
//}
//int main()
//{
//#if 1==2
//	printf("haha\n");
//#elif 2==1
//	printf("hehe\n");
//#else
//	printf("嘿嘿\n");
//#endif
//	return 0;
//}
//#pragma once 防止头文件被重复引用
//struct S
//{
//	char c1;
//	int a;
//	char c2;
//
//};
//#define OFFSEOF(struct_name,member_name)(int)&(((struct_name*)0)->member_name)
//int main()
//{
//	struct S s;
//	printf("%d\n", offsetof(struct S, c1));
//	printf("%d\n", offsetof(struct S, a));
//	printf("%d\n", offsetof(struct S, c2));
//	return 0;
//}
